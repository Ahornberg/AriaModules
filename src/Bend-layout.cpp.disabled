#include "plugin.hpp"


struct Bendlet : Module {
	enum ParamIds {
		NUM_PARAMS
	};
	enum InputIds {
		PITCH_INPUT,
		PB_INPUT,
		NUM_INPUTS
	};
	enum OutputIds {
		BENT_OUTPUT,
		NUM_OUTPUTS
	};
	enum LightIds {
		NUM_LIGHTS
	};

	Bendlet() {
		config(NUM_PARAMS, NUM_INPUTS, NUM_OUTPUTS, NUM_LIGHTS);
	}

	void process(const ProcessArgs& args) override {
	}
};


struct BendletWidget : ModuleWidget {
	BendletWidget(Bendlet* module) {
		setModule(module);
		setPanel(APP->window->loadSvg(asset::plugin(pluginInstance, "res/Bendlet.svg")));

		addChild(createWidget<ScrewSilver>(Vec(RACK_GRID_WIDTH, 0)));
		addChild(createWidget<ScrewSilver>(Vec(box.size.x - 2 * RACK_GRID_WIDTH, 0)));
		addChild(createWidget<ScrewSilver>(Vec(RACK_GRID_WIDTH, RACK_GRID_HEIGHT - RACK_GRID_WIDTH)));
		addChild(createWidget<ScrewSilver>(Vec(box.size.x - 2 * RACK_GRID_WIDTH, RACK_GRID_HEIGHT - RACK_GRID_WIDTH)));

		addInput(createInputCentered<PJ301MPort>(mm2px(Vec(7.62, 79.0)), module, Bendlet::PITCH_INPUT));
		addInput(createInputCentered<PJ301MPort>(mm2px(Vec(7.62, 92.0)), module, Bendlet::PB_INPUT));

		addOutput(createOutputCentered<PJ301MPort>(mm2px(Vec(7.62, 105.0)), module, Bendlet::BENT_OUTPUT));

		// mm2px(Vec(11.0, 52.5))
		addChild(createWidget<Widget>(mm2px(Vec(2.12, 18.0))));
		// mm2px(Vec(13.601, 9.962))
		addChild(createWidget<Widget>(mm2px(Vec(1.0, 114.538))));
	}
};


Model* modelBendlet = createModel<Bendlet, BendletWidget>("Bendlet");